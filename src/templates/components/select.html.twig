{% macro govukSelect(params) %}
{% from "@govuk-frontend-twig/macros/attributes.twig" import govukAttributes -%}
{% from "@govuk-frontend-twig/components/error-message.html.twig" import govukErrorMessage %}
{% from "@govuk-frontend-twig/components/hint.html.twig" import govukHint %}
{% from "@govuk-frontend-twig/components/label.html.twig" import govukLabel %}

{#- a record of other elements that we need to associate with the input using
   aria-describedby â€“ for example hints or error messages -#}
{%- set describedBy = params.describedBy | default("") -%}
<div class="govuk-form-group {%- if params.errorMessage | default(false) %} govuk-form-group--error{% endif %} {%- if params.formGroup.classes | default(false) %} {{ params.formGroup.classes }}{% endif %}" {{- govukAttributes(params.formGroup.attributes ?? []) }}>
  {{ govukLabel({
    html: params.label.html | default(null),
    text: params.label.text | default(null),
    classes: params.label.classes | default(null),
    isPageHeading: params.label.isPageHeading | default(null),
    attributes: params.label.attributes | default(null),
    for: params.id | default(null)
  }) | trim | raw }}
{%- if params.hint | default(false) ~%}
  {%- set hintId = "#{params.id}-hint" ~%}
  {%- set describedBy = describedBy is empty ? hintId : "#{describedBy} #{hintId}" ~%}
  {{ govukHint({
    id: hintId,
    classes: params.hint.classes | default(null),
    attributes: params.hint.attributes | default(null),
    html: params.hint.html | default(null),
    text: params.hint.text | default(null)
  }) | trim | raw }}
{%- endif ~%}
{%- if params.errorMessage | default(false) ~%}
  {%- set errorId = "#{params.id}-error" ~%}
  {%- set describedBy = describedBy is empty ? errorId : "#{describedBy} #{errorId}" ~%}
  {{ govukErrorMessage({
    id: errorId,
    classes: params.errorMessage.classes | default(null),
    attributes: params.errorMessage.attributes | default(null),
    html: params.errorMessage.html | default(null),
    text: params.errorMessage.text | default(null),
    visuallyHiddenText: params.errorMessage.visuallyHiddenText | default(null)
  }) | trim | raw }}
{%- endif ~%}
  <select class="govuk-select
    {%- if params.classes | default(false) %} {{ params.classes }}{% endif %}{%- if params.errorMessage | default(false) %} govuk-select--error{% endif %}" id="{{ params.id }}" name="{{ params.name }}"
    {%- if params.disabled | default(false) %} disabled{% endif ~%}
    {%- if describedBy %} aria-describedby="{{ describedBy }}"{% endif ~%}
    {{- govukAttributes(params.attributes ?? []) }}>
  {%- for item in params.items ?? [] ~%}
    {%- if item ~%}
    {#- Allow selecting by text content (the value for an option when no value attribute is specified) -#}
    {%- set effectiveValue = item.value | default(item.text) ~%}
    <option {%- if item.value is defined %} value="{{ item.value is same as(true) or item.value is same as(false) ? (item.value ? 'true' : 'false') : item.value }}"{% endif ~%}
      {{- item.selected is defined ? (item.selected == true ? " selected" : "") : ((params.value is defined and effectiveValue == params.value) and (item.selected is not defined or item.selected != false) ? " selected" : "") }}
      {{- item.disabled | default(false) ? " disabled" : "" }}
      {{- govukAttributes(item.attributes ?? []) }}>
      {{- item.text -}}
    </option>
    {%- endif ~%}
  {%- endfor ~%}
  </select>
</div>
{% endmacro %}
