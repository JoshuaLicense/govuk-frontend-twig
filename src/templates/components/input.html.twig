{% macro govukInput(params) %}
{% from "@govuk-frontend-twig/macros/attributes.twig" import govukAttributes -%}
{% from "@govuk-frontend-twig/components/error-message.html.twig" import govukErrorMessage %}
{% from "@govuk-frontend-twig/components/hint.html.twig" import govukHint %}
{% from "@govuk-frontend-twig/components/label.html.twig" import govukLabel %}

{#- a record of other elements that we need to associate with the input using
   aria-describedby â€“ for example hints or error messages -#}
{%- set describedBy = params.describedBy | default() -%}

{%- set hasPrefix = params.prefix | default(false) and (params.prefix.text | default(false) or params.prefix.html | default(false)) ? true : false -%}
{%- set hasSuffix = params.suffix | default(false) and (params.suffix.text | default(false) or params.suffix.html | default(false)) ? true : false -%}
{%- set hasBeforeInput = params.formGroup.beforeInput | default(false) and (params.formGroup.beforeInput.text | default(false) or params.formGroup.beforeInput.html | default(false)) ? true : false -%}
{%- set hasAfterInput = params.formGroup.afterInput | default(false) and (params.formGroup.afterInput.text | default(false) or params.formGroup.afterInput.html | default(false)) ? true : false -%}

{%- macro _inputElement(params, describedBy) -%}
  {%- from "@govuk-frontend-twig/macros/attributes.twig" import govukAttributes -%}

  {#- Set classes for this component -#}
  {%- set classNames = "govuk-input" %}

  {%- if params.classes | default(false) %}
    {%- set classNames = "#{classNames} #{params.classes}" %}
  {%- endif %}

  {%- if params.errorMessage | default(false) %}
    {%- set classNames = "#{classNames} govuk-input--error" %}
  {%- endif -%}

  <input
    {{- govukAttributes({
      class: classNames,
      id: params.id | default(null),
      name: params.name | default(null),
      type: params.type | default("text"),
      spellcheck: {
        value: params.spellcheck is defined ? (params.spellcheck ? 'true' : 'false') : null,
        optional: true
      },
      value: {
        value: params.value | default(null),
        optional: true
      },
      disabled: {
        value: params.disabled | default(null),
        optional: true
      },
      "aria-describedby": {
        value: describedBy | default(null),
        optional: true
      },
      autocomplete: {
        value: params.autocomplete | default(null),
        optional: true
      },
      autocapitalize: {
        value: params.autocapitalize | default(null),
        optional: true
      },
      pattern: {
        value: params.pattern | default(null),
        optional: true
      },
      inputmode: {
        value: params.inputmode | default(null),
        optional: true
      }
    }) -}}

    {{- govukAttributes(params.attributes ?? []) }}>
{%- endmacro -%}

{%- macro _affixItem(affix, type) -%}
{%- from "@govuk-frontend-twig/macros/attributes.twig" import govukAttributes %}
<div class="govuk-input__{{ type }} {%- if affix.classes | default(false) %} {{ affix.classes }}{% endif %}" aria-hidden="true" {{- govukAttributes(affix.attributes ?? []) }}>
  {{- affix.html | default(false) ? affix.html | trim | raw : affix.text -}}
</div>
{%- endmacro -%}

<div class="govuk-form-group {%- if params.errorMessage | default(false) %} govuk-form-group--error{% endif %} {%- if params.formGroup.classes | default(false) %} {{ params.formGroup.classes }}{% endif %}" {{- govukAttributes(params.formGroup.attributes ?? []) }}>
  {{ govukLabel({
    html: params.label.html | default(null),
    text: params.label.text | default(null),
    classes: params.label.classes | default(null),
    isPageHeading: params.label.isPageHeading | default(null),
    attributes: params.label.attributes | default(null),
    for: params.id | default(null)
  }) | trim | raw }}
{%- if params.hint | default(false) ~%}
  {%- set hintId = "#{params.id}-hint" ~%}
  {%- set describedBy = describedBy is empty ? hintId : "#{describedBy} #{hintId}" ~%}
  {{ govukHint({
    id: hintId,
    classes: params.hint.classes | default(null),
    attributes: params.hint.attributes | default(null),
    html: params.hint.html | default(null),
    text: params.hint.text | default(null)
  }) | trim | raw }}
{%- endif ~%}
{%- if params.errorMessage | default(false) ~%}
  {%- set errorId = "#{params.id}-error" ~%}
  {%- set describedBy = describedBy is empty ? errorId : "#{describedBy} #{errorId}" ~%}
  {{ govukErrorMessage({
    id: errorId,
    classes: params.errorMessage.classes | default(null),
    attributes: params.errorMessage.attributes | default(null),
    html: params.errorMessage.html | default(null),
    text: params.errorMessage.text | default(null),
    visuallyHiddenText: params.errorMessage.visuallyHiddenText | default(null)
  }) | trim | raw }}
{%- endif ~%}

{%- if hasPrefix or hasSuffix or hasBeforeInput or hasAfterInput ~%}
  <div class="govuk-input__wrapper {%- if params.inputWrapper.classes | default(false) %} {{ params.inputWrapper.classes }}{% endif %}"
  {{- govukAttributes(params.inputWrapper.attributes ?? []) }}>
  {%- if hasBeforeInput %}
  {{- params.formGroup.beforeInputs.html | default(false) ? params.formGroup.beforeInputs.html | trim | raw : params.formGroup.beforeInputs.text }}
  {%~ endif %}
  {%- if hasPrefix ~%}
  {{ _self._affixItem(params.prefix, 'prefix') }}
  {%- endif ~%}
    {{ _self._inputElement(params, describedBy) }}
  {%- if hasSuffix ~%}
  {{ _self._affixItem(params.suffix, 'suffix') }}
  {%- endif ~%}
  {%~ if hasAfterInput %}
  {{- params.formGroup.afterInput.html | default(false) ? params.formGroup.afterInput.html | trim | raw : params.formGroup.afterInput.text }}
  {%~ endif %}
  </div>
{%- else ~%}
  {{ _self._inputElement(params, describedBy) }}
{%- endif ~%}
</div>
{% endmacro %}
