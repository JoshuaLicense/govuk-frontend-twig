{% macro govukInput(params) %}
{% from "@govuk-frontend-twig/components/error-message.html.twig" import govukErrorMessage -%}
{% from "@govuk-frontend-twig/components/hint.html.twig" import govukHint %}
{% from "@govuk-frontend-twig/components/label.html.twig" import govukLabel %}

{#- a record of other elements that we need to associate with the input using
   aria-describedby â€“ for example hints or error messages -#}
{% set describedBy = params.describedBy | default() -%}

{%- set hasPrefix = params.prefix | default(false) and (params.prefix.text | default(false) or params.prefix.html | default(false)) ? true : false %}
{%- set hasSuffix = params.suffix | default(false) and (params.suffix.text | default(false) or params.suffix.html | default(false)) ? true : false %}

{%- macro _inputElement(params, describedBy) %}
  <input class="govuk-input {%- if params.classes | default(false) %} {{ params.classes }}{% endif %} {%- if params.errorMessage | default(false) %} govuk-input--error{% endif %}" id="{{ params.id }}" name="{{ params.name | default() }}" type="{{ params.type | default('text') }}"
    {%- if params.spellcheck is defined %} spellcheck="{{ params.spellcheck ? 'true' : 'false' }}"{% endif %}
    {%- if params.value | default(false) %} value="{{ params.value}}"{% endif %}
    {%- if params.disabled | default(false) %} disabled{% endif %}
    {%- if describedBy | default(false) %} aria-describedby="{{ describedBy }}"{% endif %}
    {%- if params.autocomplete | default(false) %} autocomplete="{{ params.autocomplete}}"{% endif %}
    {%- if params.pattern | default(false) %} pattern="{{ params.pattern }}"{% endif %}
    {%- if params.inputmode | default(false) %} inputmode="{{ params.inputmode }}"{% endif %}
    {%- for attribute, value in params.attributes ?? [] %} {{ attribute }}="{{ value }}"{% endfor %}>
{%- endmacro -%}

{%- macro _affixItem(affix, type) -%}
  <div class="govuk-input__{{ type }} {%- if affix.classes | default(false) %} {{ affix.classes }}{% endif %}" aria-hidden="true" {%- for attribute, value in affix.attributes ?? [] %} {{ attribute }}="{{ value }}"{% endfor %}>
    {{- affix.html | default(false) ? affix.html | trim | raw : affix.text -}}
  </div>
{%- endmacro -%}

<div class="govuk-form-group {%- if params.errorMessage | default(false) %} govuk-form-group--error{% endif %} {%- if params.formGroup.classes | default(false) %} {{ params.formGroup.classes }}{% endif %}" {%- for attribute, value in params.formGroup.attributes ?? [] %} {{ attribute }}="{{ value }}"{% endfor %}>
  {{ govukLabel({
    html: params.label.html | default(null),
    text: params.label.text | default(null),
    classes: params.label.classes | default(null),
    isPageHeading: params.label.isPageHeading | default(null),
    attributes: params.label.attributes | default(null),
    for: params.id | default(null)
  }) | trim | raw }}
{% if params.hint | default(false) %}
  {% set hintId = "#{params.id}-hint" %}
  {% set describedBy = describedBy is empty ? hintId : "#{describedBy} #{hintId}" %}
  {{ govukHint({
    id: hintId,
    classes: params.hint.classes | default(null),
    attributes: params.hint.attributes | default(null),
    html: params.hint.html | default(null),
    text: params.hint.text | default(null)
  }) | trim | raw }}
{% endif %}
{% if params.errorMessage | default(false) %}
  {% set errorId = "#{params.id}-error" %}
  {% set describedBy = describedBy is empty ? errorId : "#{describedBy} #{errorId}" %}
  {{ govukErrorMessage({
    id: errorId,
    classes: params.errorMessage.classes | default(null),
    attributes: params.errorMessage.attributes | default(null),
    html: params.errorMessage.html | default(null),
    text: params.errorMessage.text | default(null),
    visuallyHiddenText: params.errorMessage.visuallyHiddenText | default(null)
  }) | trim | raw }}
{% endif %}

{%- if hasPrefix or hasSuffix %}
  <div class="govuk-input__wrapper">
  {% if hasPrefix %}
    {{ _self._affixItem(params.prefix, 'prefix') }}
  {% endif %}
    {{ _self._inputElement(params, describedBy) }}
  {% if hasSuffix %}
    {{ _self._affixItem(params.suffix, 'suffix') }}
  {% endif %}
    </div>
{% else %}
{{ _self._inputElement(params, describedBy) }}
{% endif %}
</div>
{% endmacro %}
