{% macro govukCharacterCount(params) %}
{% from "@govuk-frontend-twig/macros/i18n.twig" import govukPluralisedI18nAttributes %}

{% from "@govuk-frontend-twig/components/textarea.html.twig" import govukTextarea %}
{% from "@govuk-frontend-twig/components/hint.html.twig" import govukHint %}

{%- set hasNoLimit = not (params.maxwords | default(false) or params.maxlength | default(false)) %}

<div class="govuk-character-count" data-module="govuk-character-count"
{%- if params.maxlength | default(false) %} data-maxlength="{{ params.maxlength }}"{% endif %}
{%- if params.threshold | default(false) %} data-threshold="{{ params.threshold }}"{% endif %}
{%- if params.maxwords | default(false) %} data-maxwords="{{ params.maxwords }}"{% endif %}
{#
  Without maxlength or maxwords, we can't guess if the component will count words or characters.
  We can't guess a default textarea description to be interpolated in JavaScript
  once the maximum gets configured there.
  So we only add the attribute if a textarea description was explicitely provided.
#}
{%- if hasNoLimit and params.textareaDescriptionText | default(false) %}{{govukPluralisedI18nAttributes('textarea-description', {other: params.textareaDescriptionText})}}{% endif %}
{%- if params.charactersUnderLimitText | default(false) %}{{govukPluralisedI18nAttributes('characters-under-limit', params.charactersUnderLimitText)}}{% endif %}
{%- if params.charactersAtLimitText | default(false) %} data-i18n.characters-at-limit="{{ params.charactersAtLimitText | escape}}"{% endif %}
{%- if params.charactersOverLimitText | default(false) %}{{govukPluralisedI18nAttributes('characters-over-limit', params.charactersOverLimitText)}}{% endif %}
{%- if params.wordsUnderLimitText | default(false) %}{{govukPluralisedI18nAttributes('words-under-limit', params.wordsUnderLimitText)}}{% endif %}
{%- if params.wordsAtLimitText | default(false) %} data-i18n.words-at-limit="{{ params.wordsAtLimitText | escape}}"{% endif %}
{%- if params.wordsOverLimitText | default(false) %}{{govukPluralisedI18nAttributes('words-over-limit', params.wordsOverLimitText)}}{% endif %}>
{%- set classNames = 'govuk-js-character-count' %}
{%- if params.classes | default(false) %}
  {%- set classNames = "#{classNames} #{params.classes}" %}
{%- endif %}

  {{ govukTextarea({
    id: params.id,
    name: params.name,
    describedBy: "#{params.id}-info",
    rows: params.rows | default(null),
    spellcheck: params.spellcheck is defined ? params.spellcheck : null,
    value: params.value | default(null),
    formGroup: params.formGroup | default(null),
    classes: classNames,
    label: {
      html: params.label.html | default(null),
      text: params.label.text | default(null),
      classes: params.label.classes | default(null),
      isPageHeading: params.label.isPageHeading | default(false),
      attributes: params.label.attributes | default(null),
      for: params.id | default(null)
    },
    hint: params.hint | default(null),
    errorMessage: params.errorMessage | default(null),
    attributes: params.attributes | default(null)
  }) }}
  {%- set textareaDescriptionLength = params.maxwords | default(params.maxlength | default()) %}
  {%- set textareaUnit = params.maxwords | default(false) ? 'words' : 'characters' %}
  {%- set textareaDescriptionText = params.textareaDescriptionText | default("You can enter up to %{count} #{textareaUnit}") %}
  {#
    If the limit is set in JavaScript, we won't be able to interpolate the message
    until JavaScript, so we only set a text if the `maxlength` or `maxwords` options
    were provided to the macro.
  #}
  {%- set countMessageClassNames = 'govuk-character-count__message' %}
  {%- if params.countMessage.classes | default(false) %}
    {%- set countMessageClassNames = "#{countMessageClassNames} #{params.countMessage.classes}" %}
  {%- endif %}

  {{ govukHint({
    text: hasNoLimit ? null : textareaDescriptionText | replace({'%{count}': textareaDescriptionLength}),
    id: "#{params.id}-info",
    classes: countMessageClassNames
  }) }}
</div>
{% endmacro %}
